{
  "name": "cinekinetic-api",
  "version": "1.0.0",
  "description": "Cinekinetic API with ComfyUI integrations for Minimax",
  "runtime": "node:18",
  "build": {
    "command": "npm install && npm run build",
    "outputDirectory": ".next"
  },
  "start": {
    "command": "npm start",
    "port": 3000
  },
  "environment": {
    "NODE_ENV": "production",
    "DATABASE_URL": "${DATABASE_URL}",
    "DIRECT_URL": "${DIRECT_URL}",
    "NEXT_PUBLIC_SUPABASE_URL": "${NEXT_PUBLIC_SUPABASE_URL}",
    "NEXT_PUBLIC_SUPABASE_ANON_KEY": "${NEXT_PUBLIC_SUPABASE_ANON_KEY}",
    "SUPABASE_SERVICE_ROLE_KEY": "${SUPABASE_SERVICE_ROLE_KEY}",
    "NEXTAUTH_URL": "${NEXTAUTH_URL}",
    "NEXTAUTH_SECRET": "${NEXTAUTH_SECRET}",
    "MINIMAX_API_KEY": "${MINIMAX_API_KEY}",
    "MINIMAX_API_URL": "https://api.minimax.chat/v1",
    "COMFYUI_API_URL": "${COMFYUI_API_URL}",
    "COMFYUI_WS_URL": "${COMFYUI_WS_URL}"
  },
  "services": {
    "database": "postgresql",
    "storage": "supabase",
    "auth": "supabase",
    "realtime": "websocket"
  },
  "endpoints": [
    {
      "path": "/api/health",
      "method": "GET",
      "description": "Health check endpoint"
    },
    {
      "path": "/api/status",
      "method": "GET",
      "description": "System status"
    },
    {
      "path": "/api/comfyui/framepack",
      "method": "POST",
      "description": "FramePack generation"
    },
    {
      "path": "/api/comfyui/fusionx",
      "method": "POST",
      "description": "FusionX processing"
    },
    {
      "path": "/api/comfyui/wan-retyle",
      "method": "POST",
      "description": "WAN Restyle"
    },
    {
      "path": "/api/style-transfer",
      "method": "POST",
      "description": "Style transfer"
    },
    {
      "path": "/api/storyboard",
      "method": "POST",
      "description": "Storyboard generation"
    },
    {
      "path": "/api/characters/generate",
      "method": "POST",
      "description": "Character generation"
    },
    {
      "path": "/api/nlp/analyze",
      "method": "POST",
      "description": "NLP analysis"
    },
    {
      "path": "/api/wan2/generate",
      "method": "POST",
      "description": "WAN2 generation"
    }
  ],
  "scaling": {
    "minInstances": 1,
    "maxInstances": 10,
    "targetCPU": 70,
    "targetMemory": 80
  },
  "resources": {
    "cpu": "2",
    "memory": "4Gi",
    "disk": "10Gi"
  }
}
